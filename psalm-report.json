{
    "error": [],
    "warning": [
        {
            "severity": "info",
            "line_from": 28,
            "line_to": 28,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'string' for Spryker\\Shared\\Auth\\Client\\StaticToken::getRawToken is not nullable, but 'null|string' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Shared/Auth/Client/StaticToken.php",
            "snippet": "     * @return string",
            "selected_text": "string",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 32,
            "line_to": 32,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'string' for Spryker\\Shared\\Auth\\Client\\StaticToken::getRawToken is not nullable, but the function returns 'null|string'",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Shared/Auth/Client/StaticToken.php",
            "snippet": "        return $this->rawToken;",
            "selected_text": "$this->rawToken",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 40,
            "line_to": 40,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of password_hash cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Shared/Auth/Client/StaticToken.php",
            "snippet": "        return base64_encode(password_hash($this->rawToken, PASSWORD_DEFAULT));",
            "selected_text": "$this->rawToken",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 50,
            "line_to": 50,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of password_verify cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Shared/Auth/Client/StaticToken.php",
            "snippet": "        return password_verify($this->rawToken, base64_decode($hash));",
            "selected_text": "$this->rawToken",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 81,
            "line_to": 81,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Auth\\Dependency\\Facade\\AuthToUserInterface::isValidPassword cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "        $isValidPassword = $this->userFacade->isValidPassword($password, $userTransfer->getPassword());",
            "selected_text": "$userTransfer->getPassword()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of sprintf cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "        return hash('sha256', sprintf('%s%s', $user->getPassword(), $user->getIdUser()));",
            "selected_text": "$user->getPassword()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of sprintf cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "        return hash('sha256', sprintf('%s%s', $user->getPassword(), $user->getIdUser()));",
            "selected_text": "$user->getIdUser()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 177,
            "line_to": 177,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Dependency\\Facade\\AuthToUserInterface::getActiveUserById cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "            $realUser = $this->userFacade->getActiveUserById($currentUser->getIdUser());",
            "selected_text": "$currentUser->getIdUser()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 286,
            "line_to": 286,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'Generated\\Shared\\Transfer\\UserTransfer' for Spryker\\Zed\\Auth\\Business\\Model\\Auth::getCurrentUser is not nullable, but 'Generated\\Shared\\Transfer\\UserTransfer|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "     * @return \\Generated\\Shared\\Transfer\\UserTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\UserTransfer",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 292,
            "line_to": 292,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'Generated\\Shared\\Transfer\\UserTransfer' for Spryker\\Zed\\Auth\\Business\\Model\\Auth::getCurrentUser is not nullable, but the function returns 'Generated\\Shared\\Transfer\\UserTransfer|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/Auth.php",
            "snippet": "        return $user;",
            "selected_text": "$user",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 91,
            "line_to": 91,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Auth\\Persistence\\SpyResetPassword::setFkUser cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/PasswordReset.php",
            "snippet": "        $resetPasswordEntity->setFkUser($userTransfer->getIdUser());",
            "selected_text": "$userTransfer->getIdUser()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 138,
            "line_to": 138,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible string variable $expiresAt",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Business/Model/PasswordReset.php",
            "snippet": "        $expiresAt->add(new DateInterval('PT' . $expiresInSeconds . 'S'));",
            "selected_text": "add",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 58,
            "line_to": 58,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Business\\AuthFacadeInterface::isAuthenticated cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Controller/LoginController.php",
            "snippet": "            if ($this->getFacade()->isAuthenticated($token)) {",
            "selected_text": "$token",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 64,
            "line_to": 64,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Business\\AuthFacadeInterface::isAuthenticated cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/Bootstrap/AuthBootstrapProvider.php",
            "snippet": "            if ($authFacade->isAuthenticated($token)) {",
            "selected_text": "$token",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 77,
            "line_to": 77,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Business\\AuthFacadeInterface::isAuthenticated cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/EventDispatcher/AuthorizationEventDispatcherPlugin.php",
            "snippet": "        if ($authFacade->isAuthenticated($token)) {",
            "selected_text": "$token",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 185,
            "line_to": 185,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Business\\AuthFacadeInterface::isAuthenticated cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/EventDispatcher/RedirectAfterLoginEventDispatcherPlugin.php",
            "snippet": "        return $authFacade->isAuthenticated($token);",
            "selected_text": "$token",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 179,
            "line_to": 179,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Auth\\Business\\AuthFacadeInterface::isAuthenticated cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/ServiceProvider/RedirectAfterLoginProvider.php",
            "snippet": "        if (!$authFacade->isAuthenticated($token)) {",
            "selected_text": "$token",
            "error_level": 3,
            "shortcode": 78
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 45,
            "line_to": 45,
            "type": "DeprecatedMethod",
            "message": "The method Silex\\Application::before has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/Bootstrap/AuthBootstrapProvider.php",
            "snippet": "        $app->before(function (Request $request) use ($app, $authFacade, $config) {",
            "selected_text": "before",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "DeprecatedMethod",
            "message": "The method Silex\\Application::redirect has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/Bootstrap/AuthBootstrapProvider.php",
            "snippet": "            return $app->redirect($config->getLoginPageUrl());",
            "selected_text": "redirect",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 49,
            "line_to": 49,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Service\\Container\\Container::offsetGet has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Auth/src/Spryker/Zed/Auth/Communication/Plugin/ServiceProvider/RedirectAfterLoginProvider.php",
            "snippet": "        $app['dispatcher']->addListener(KernelEvents::RESPONSE, [$this, 'onKernelResponse']);",
            "selected_text": "$app",
            "error_level": 2,
            "shortcode": 1
        }
    ]
}
